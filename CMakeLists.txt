cmake_minimum_required(VERSION 3.19 FATAL_ERROR)

# Macro to convert a CMake list variable to a PETSc configure list
macro(OC_TO_PETSc_LIST CMAKE_LIST PETSc_LIST)
  set(${PETSc_LIST} "[")
  list(LENGTH ${CMAKE_LIST} _CMAKE_LIST_LENGTH)
  if(${_CMAKE_LIST_LENGTH} GREATER 0)
    list(GET ${CMAKE_LIST} 0 _ITEM)
    string(APPEND ${PETSc_LIST} "${_ITEM}")
    if(${_CMAKE_LIST_LENGTH} GREATER 1)
      math(EXPR _STOP_IDX "${_CMAKE_LIST_LENGTH}-1")
      foreach(_ITEM_IDX RANGE 1 ${_STOP_IDX})
        list(GET ${CMAKE_LIST} ${_ITEM_IDX} _ITEM)
        string(APPEND ${PETSc_LIST} ",${_ITEM}")
      endforeach()
      unset(_STOP_IDX)
    endif()
    unset(_ITEM)
  endif()
  string(APPEND ${PETSc_LIST} "]")
  unset(_CMAKE_LIST_LENGTH)
  message(STATUS "CMAKE_LIST = '${${CMAKE_LIST}}'")
  message(STATUS "PETSc_LIST = '${${PETSc_LIST}}'")
endmacro()

file(READ ${CMAKE_CURRENT_SOURCE_DIR}/include/petscversion.h _PETSc_VERSION_H)
string(REGEX REPLACE ".*#define[ \t]+PETSC_VERSION_MAJOR[ \t]+([0-9]+).*" "\\1" PETSc_VERSION_MAJOR ${_PETSc_VERSION_H})
string(REGEX REPLACE ".*#define[ \t]+PETSC_VERSION_MINOR[ \t]+([0-9]+).*" "\\1" PETSc_VERSION_MINOR ${_PETSc_VERSION_H})
string(REGEX REPLACE ".*#define[ \t]+PETSC_VERSION_SUBMINOR[ \t]+([0-9]+).*" "\\1" PETSc_VERSION_SUBMINOR ${_PETSc_VERSION_H})
string(REGEX REPLACE ".*#define[ \t]+PETSC_VERSION_RELEASE[ \t]+([0-9]+).*" "\\1" PETSc_VERSION_RELEASE ${_PETSc_VERSION_H})

set(PETSc_VERSION "${PETSc_VERSION_MAJOR}.${PETSc_VERSION_MINOR}.${PETSc_VERSION_SUBMINOR}")

message(STATUS "PETSc_VERSION '${PETSc_VERSION}'")

project(PETSc
  LANGUAGES C CXX Fortran
  VERSION ${PETSc_VERSION}
)

set(PETSc_DIR "${CMAKE_CURRENT_SOURCE_DIR}")

get_property(OC_HAVE_MULTICONFIG_ENV GLOBAL PROPERTY GENERATOR_IS_MULTI_CONFIG)

list(APPEND PETSc_CONFIG "--PETSC_DIR=${PETSc_DIR}")
list(APPEND PETSc_CONFIG "--prefix=${PETSc_MPI_PREFIX}")
liST(APPEND PETSc_CONFIG "--with-C-language=C")
if(BUILD_SHARED_LIBS)  
  list(APPEND PETSc_CONFIG "--with-shared-libraries=1")
  list(APPEND PETSc_CONFIG "--ignoreCompilerOutput=1")
  list(APPEND PETSc_CONFIG "--with-pic")
endif()
if(PETSc_WITH_64_BIT_INDICES)
  list(APPEND PETSc_CONFIG "--with-64-bit-indices=1")
endif()
set(CFLAGS ${PETSc_C_FLAGS})
set(CXXFLAGS ${PETSc_CXX_FLAGS})
set(FFLAGS ${PETSc_Fortran_FLAGS})
set(LDFLAGS )
if(CMAKE_C_COMPILER_ID STREQUAL "IntelLLVM")
  if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    list(APPEND CFLAGS "-O0")
    list(APPEND CFLAGS "-debug")
  elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    list(APPEND CFLAGS "-O3")
    list(APPEND CFLAGS "-debug")
  else()
    list(APPEND CFLAGS "-O3")
  endif()
elseif(CMAKE_C_COMPILER_ID STREQUAL "GNU")
  if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    list(APPEND CFLAGS "-g")
    list(APPEND CFLAGS "-O0")
  elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    list(APPEND CFLAGS "-g")
  else()
    list(APPEND CFLAGS "-Ofast")
  endif()
elseif(CMAKE_C_COMPILER_ID STREQUAL "Clang")
endif()
if(CMAKE_CXX_COMPILER_ID STREQUAL "IntelLLVM")
  if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    list(APPEND CXXFLAGS "-O0")
    list(APPEND CXXFLAGS "-debug")
  elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    list(APPEND CFLAGS "-O3")
    list(APPEND CXXFLAGS "-debug")
  else()
    list(APPEND CXXFLAGS "-O3")
  endif()
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "GNU")
  if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    list(APPEND CXXFLAGS "-g")
    list(APPEND CXXFLAGS "-O0")
  elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    list(APPEND CXXFLAGS "-g")
  else()
    list(APPEND CXXFLAGS "-Ofast")
  endif()
elseif(CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
endif()
if(CMAKE_Fortran_COMPILER_ID STREQUAL "IntelLLVM")
  if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    list(APPEND FFLAGS "-O0")
    list(APPEND FFLAGS "-debug")
  elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    list(APPEND FFLAGS "-O3")
    list(APPEND FFLAGS "-debug")
  else()
    list(APPEND FFLAGS "-O3")
  endif()
elseif(CMAKE_Fortran_COMPILER_ID STREQUAL "GNU")
  if(CMAKE_BUILD_TYPE STREQUAL "Debug")
    list(APPEND FFLAGS "-g")
    list(APPEND FFLAGS "-O0")
  elseif(CMAKE_BUILD_TYPE STREQUAL "RelWithDebInfo")
    list(APPEND FFLAGS "-g")
  else()
    list(APPEND FFLAGS "-Ofast")
  endif()
elseif(CMAKE_Fortran_COMPILER_ID STREQUAL "Clang")
endif()

if(PETSc_C_COMPILER)
  list(APPEND PETSc_CONFIG "--CC=${PETSc_C_COMPILER}")
  list(APPEND PETSc_CONFIG "--CFLAGS='${CFLAGS}'")
endif()
if(PETSc_CXX_COMPILER)
  list(APPEND PETSc_CONFIG "--CXX=${PETSc_CXX_COMPILER}")
  list(APPEND PETSc_CONFIG "--CXXFLAGS='${CFLAGS}'")
endif()
if(PETSc_Fortran_COMPILER)
  liST(APPEND PETSc_CONFIG "--with-fortran-bindings=1")
  list(APPEND PETSc_CONFIG "--FC=${PETSc_Fortran_COMPILER}")
  list(APPEND PETSc_CONFIG "--FFLAGS='${FFLAGS}'")
endif()
# BLAS/LAPACK
if(PETSc_WITH_BLAS_LAPACK)
  find_package(BLAS)
  if(BLAS_FOUND)
    OC_TO_PETSc_LIST(BLAS_LIBRARIES PETSc_BLAS_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-blas-lib=${PETSc_BLAS_LIBRARIES}")
  endif()
  find_package(LAPACK)
  if(LAPACK_FOUND)
    OC_TO_PETSc_LIST(LAPACK_LIBRARIES PETSc_LAPACK_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-lapack-lib=${PETSc_LAPACK_LIBRARIES}")
  endif()
endif()
# BLACS/ScaLAPACK
if(PETSc_WITH_BLACS_ScaLAPACK)
  find_package(ScaLAPACK)
  if(ScaLAPACK_FOUND)
    list(APPEND PETSc_CONFIG "--with-scalapack=1")
    OC_TO_PETSc_LIST(ScaLAPACK_INCLUDE_DIRS PETSc_ScaLAPACK_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-scalapack-include=${PETSc_ScaLAPACK_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(ScaLAPACK_LIBRARIES PETSc_ScaLAPACK_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-scalapack-lib=${PETSc_ScaLAPACK_LIBRARIES}")
  endif()
endif()
# COLPACK
# CUDA
if(PETSc_WITH_CUDA)
  find_package(CUDA)
  if(CUDA_FOUND)
    list(APPEND PETSc_CONFIG "--with-cuda=1")
  endif()
endif()
# HDF5
if(PETSc_WITH_HDF5)
  find_package(HDF5)
  if(HDF_FOUND)
    list(APPEND PETSc_CONFIG "--with-hdf5=1")
    OC_TO_PETSc_LIST(HDF5_INCLUDE_DIRS PETSc_HDF5_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-hdf5-include=${PETSc_HDF5_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(HDF5_LIBRARIES PETSc_HDF5_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-hdf5-lib=${PETSc_HDF5_LIBRARIES}")
  endif()
endif()
# Hypre
if(PETSc_WITH_HYPRE)
  find_package(HYPRE)
  if(HYPRE_FOUND)
    list(APPEND PETSc_CONFIG "--with-hypre=1")
    OC_TO_PETSc_LIST(HYPRE_INCLUDE_DIRS PETSc_HYPRE_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-hypre-include=${PETSc_HYPRE_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(HYPRE_LIBRARIES PETSc_HYPRE_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-hypre-lib=${PETSc_HYPRE_LIBRARIES}")
  endif()
endif()
# METIS
if(PETSc_WITH_METIS)
  find_package(METIS)
  if(METIS_FOUND)
    find_package(GKlib)
    if(GKlib_FOUND)
      list(APPEND PETSc_CONFIG "--with-metis=1")
      set(METIS_COMBINED_INCLUDE_DIRS ${GKlib_INCLUDE_DIRS} ${METIS_INCLUDE_DIRS})
      OC_TO_PETSc_LIST(METIS_COMBINED_INCLUDE_DIRS PETSc_METIS_COMBINED_INCLUDE_DIRS)
      list(APPEND PETSc_CONFIG "--with-metis-include=${PETSc_METIS_COMBINED_INCLUDE_DIRS}")
      set(METIS_COMBINED_LIBRARIES ${METIS_LIBRARIES} ${GKlib_LIBRARIES})
      OC_TO_PETSc_LIST(METIS_COMBINED_LIBRARIES PETSc_METIS_COMBINED_LIBRARIES)
      list(APPEND PETSc_CONFIG "--with-metis-lib=${PETSc_METIS_COMBINED_LIBRARIES}")
    endif()
  endif()
endif()
# MPI
if(PETSc_WITH_MPI)
  find_package(MPI)
  if(MPI_FOUND)
    list(APPEND PETSc_CONFIG "--with-mpi=1")
    OC_TO_PETSc_LIST(MPI_INCLUDE_DIRS PETSc_MPI_INCLUDE_DIRS)
    #list(APPEND PETSc_CONFIG "--with-mpi-include=${PETSc_MPI_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(MPI_LIBRARIES PETSc_MPI_LIBRARIES)
    #list(APPEND PETSc_CONFIG "--with-mpi-lib=${PETSc_MPI_LIBRARIES}")
  endif()
endif()
# MUMPS
if(PETSc_WITH_MUMPS)
  find_package(MUMPS)
  if(MUMPS_FOUND)
    set(MUMPS_LIBS_LIST )
    if(MUMPS_ZMUMPS_FOUND)
      list(APPEND MUMPS_LIBS_LIST ${MUMPS_ZMUMPS_LIBRARIES})
    endif()
    if(MUMPS_CMUMPS_FOUND)
      list(APPEND MUMPS_LIBS_LIST ${MUMPS_CMUMPS_LIBRARIES})
    endif()
    if(MUMPS_SMUMPS_FOUND)
      list(APPEND MUMPS_LIBS_LIST ${MUMPS_SMUMPS_LIBRARIES})
    endif()
    if(MUMPS_DMUMPS_FOUND)
      list(APPEND MUMPS_LIBS_LIST ${MUMPS_DMUMPS_LIBRARIES})
    endif()
    if(MUMPS_COMMON_FOUND)
      list(APPEND MUMPS_LIBS_LIST ${MUMPS_COMMON_LIBRARIES})
    endif()
    if(MUMPS_PORD_FOUND)
      list(APPEND MUMPS_LIBS_LIST ${MUMPS_PORD_LIBRARIES})
    endif()
    list(APPEND PETSc_CONFIG "--with-mumps=1")
    OC_TO_PETSc_LIST(MUMPS_INCLUDE_DIRS PETSc_MUMPS_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-mumps-include=${PETSc_MUMPS_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(MUMPS_LIBS_LIST PETSc_MUMPS_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-mumps-lib=${PETSc_MUMPS_LIBRARIES}")
  endif()
endif()
# ParMETIS
if(PETSc_WITH_ParMETIS)
  find_package(ParMETIS)
  if(ParMETIS_FOUND)
    list(APPEND PETSc_CONFIG "--with-parmetis=1")
    OC_TO_PETSc_LIST(ParMETIS_INCLUDE_DIRS PETSc_ParMETIS_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-parmetis-include=${PETSc_ParMETIS_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(ParMETIS_LIBRARIES PETSc_ParMETIS_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-parmetis-lib=${PETSc_ParMETIS_LIBRARIES}")
  endif()
endif()
# PTScotch
if(PETSc_WITH_PTSCOTCH)
  find_package(SCOTCH)
  if(PTESMUMPS_FOUND)
    list(APPEND PETSc_CONFIG "--with-ptscotch=1")
    OC_TO_PETSc_LIST(PTESMUMPS_INCLUDE_DIRS PETSc_PTESMUMPS_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-ptscotch-include=${PETSc_PTESMUMPS_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(PTESMUMPS_LIBRARIES PETSc_PTESMUMPS_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-ptscotch-lib=${PETSc_PTESMUMPS_LIBRARIES}")
  endif()
endif()
# SuiteSparse
if(PETSc_WITH_SuiteSparse)
  find_package(SuiteSparse)
  if(SuiteSparse_FOUND)
    list(APPEND PETSc_CONFIG "--with-suitesparse=1")
    list(APPEND PETSc_CONFIG "--with-suitesparse-pkg-config=${PETSc_NOMPI_PREFIX}")
  endif()
endif()
# SUNDIALS2
if(PETSc_WITH_SUNDIALS)
  find_package(SUNDIALS)
  if(SUNDIALS_FOUND)
    list(APPEND PETSc_CONFIG "--with-sundials2=1")
    OC_TO_PETSc_LIST(SUNDIALS_INCLUDE_DIRS PETSc_SUNDIALS_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-sundials2-include=${PETSc_SUNDIALS_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(SUNDIALS_LIBRARIES PETSc_SUNDIALS_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-sundials2-lib=${PETSc_SUNDIALS_LIBRARIES}")
  endif()
endif()
# SuperLU
if(PETSc_WITH_SuperLU)
  find_package(SuperLU)
  if(SuperLU_FOUND)
    list(APPEND PETSc_CONFIG "--with-superlu=1")
    OC_TO_PETSc_LIST(SuperLU_INCLUDE_DIRS PETSc_SuperLU_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-superlu-include=${PETSc_SuperLU_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(SuperLU_LIBRARIES PETSc_SuperLU_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-superlu-lib=${PETSc_SuperLU_LIBRARIES}")
  endif()
endif()
# SuperLU_DIST
if(PETSc_WITH_SuperLU_DIST)
  find_package(SuperLU_DIST)
  if(SuperLU_DIST_FOUND)
    list(APPEND PETSc_CONFIG "--with-superlu_dist=1")
    OC_TO_PETSc_LIST(SuperLU_DIST_INCLUDE_DIRS PETSc_SuperLU_DIST_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-superlu_dist-include=${PETSc_SuperLU_DIST_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(SuperLU_DIST_LIBRARIES PETSc_SuperLU_DIST_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-superlu_dist-lib=${PETSc_SuperLU_DIST_LIBRARIES}")
  endif()
endif()
# ZLIB
if(PETSc_WITH_ZLIB)
  find_package(ZLIB)
  if(SUNDIALS_FOUND)
    list(APPEND PETSc_CONFIG "--with-zlib=1")
    OC_TO_PETSc_LIST(ZLIB_INCLUDE_DIRS PETSc_ZLIB_INCLUDE_DIRS)
    list(APPEND PETSc_CONFIG "--with-zlib-include=${PETSc_ZLIB_INCLUDE_DIRS}")
    OC_TO_PETSc_LIST(ZLIB_LIBRARIES PETSc_ZLIB_LIBRARIES)
    list(APPEND PETSc_CONFIG "--with-zlib-lib=${PETSc_ZLIB_LIBRARIES}")
  endif()
endif()

message(STATUS "PETSc configure options: '${PETSc_CONFIG}'")

add_custom_target(PETSc
  ALL
  COMMAND make clean
  COMMAND ${PETSc_DIR}/configure ${PETSc_CONFIG} ${PETSc_DIR}/.
  COMMAND ${CMAKE_COMMAND} -E env PETSC_DIR=${PETSc_MPI_PREFIX} make
  COMMAND ${CMAKE_COMMAND} -E env PETSC_DIR=${PETSc_MPI_PREFIX} make install
  COMMAND_EXPAND_LISTS
  WORKING_DIRECTORY ${PETSc_DIR}
  COMMENT "Configuring, building and installing PETSc...."
)
